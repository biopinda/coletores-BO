{
  "permissions": {
    "allow": [
      "Bash(git init:*)",
      "Bash(ruler init:*)",
      "Bash(powershell:*)",
      "Bash(git remote add:*)",
      "Bash(git remote set-url:*)",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git branch:*)",
      "Read(//h/**)",
      "Bash(if exist specsmain rmdir /s /q specsmain)",
      "Bash(move:*)",
      "Bash(mv:*)",
      "Bash(if not exist src mkdir src)",
      "Bash(if not exist tests mkdir tests)",
      "Bash(if not exist docs mkdir docs)",
      "Bash(if not exist data mkdir data)",
      "Bash(if not exist output mkdir output)",
      "Bash(if not exist pipeline mkdir pipeline)",
      "Bash(if not exist algorithms mkdir algorithms)",
      "Bash(if not exist models mkdir models)",
      "Bash(if not exist storage mkdir storage)",
      "Bash(if not exist contract mkdir contract)",
      "Bash(if not exist integration mkdir integration)",
      "Bash(if not exist unit mkdir unit)",
      "Bash(git log:*)",
      "Bash(pip install:*)",
      "Bash(python -m pytest --version)",
      "Bash(python:*)",
      "Bash(Forzza, R.C.)",
      "Bash(Pessoa)",
      "Bash(Silva, J.)",
      "Bash(echo:*)",
      "Bash(findstr:*)",
      "Bash(if exist datacanonical_entities_v2.db del datacanonical_entities_v2.db)",
      "Bash(if not exist srcpipeline mkdir srcpipeline)",
      "Bash(if not exist srcalgorithms mkdir srcalgorithms)",
      "Bash(if not exist srcmodels mkdir srcmodels)",
      "Bash(if not exist srcstorage mkdir srcstorage)",
      "Bash(if not exist testscontract mkdir testscontract)",
      "Bash(if not exist testsintegration mkdir testsintegration)",
      "Bash(if not exist testsunit mkdir testsunit)",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "WebSearch",
      "Bash(where python)",
      "Bash(nvidia-smi:*)",
      "Bash(reg query:*)",
      "Bash(pip uninstall:*)",
      "Bash(del test_ner_gpu.py verify_gpu_usage.py)",
      "Bash(\" as separator\n\n- Canonicalization:\n  * Convert full first names to initials (e.g., \"TIAGO\" â†’ \"T.\")\n  * Unique variations enforcement (case-sensitive)\n  * Update occurrence counts for existing variations\n\n- Similarity & Grouping:\n  * Increased phonetic weight (0.2 â†’ 0.3)\n  * Check variations for similarity matching\n  * Remove punctuation/spaces for exact match detection\n  * Better grouping of phonetic variants\n\n- CSV Export:\n  * Changed to 2 columns: canonicalName and variations\n  * Use \")",
      "Bash(\" separator for variations\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")"
    ],
    "deny": [],
    "ask": []
  }
}